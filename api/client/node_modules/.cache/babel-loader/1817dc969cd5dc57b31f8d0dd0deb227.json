{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, _this.renderAdmin(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \" \", stream.description)));\n      });\n    }\n  }, {\n    key: \"renderCreate\",\n    value: function renderCreate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\Users\\Mike\\Documents\\GitHub\\streams\\client\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","stream","userId","currentUserId","streams","map","id","renderAdmin","title","description","renderList","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWF,YAAX;AACH;;;gCAEWG,M,EAAQ;AAChB,UAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAjC,EAAgD;AAC5C,eACI;AAAK,UAAA,SAAS,EACV,uBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADJ;AAWH;AACJ;;;iCAEY;AAAA;;AACT,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACpC,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAI,CAACC,WAAL,CAAiBN,MAAjB,CADL,EAEI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,MAAM,CAACO,KADZ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+BP,MAAM,CAACQ,WAAtC,CAFJ,CAHJ,CADJ;AAUH,OAXM,CAAP;AAYH;;;mCAGD,CAEC;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,UAAL,EADL,CAFJ,CADJ;AAQH;;;;EAlDoBd,KAAK,CAACe,S;;AAqD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADN;AAEHD,IAAAA,aAAa,EAAEU,KAAK,CAACG,IAAN,CAAWd;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\r\n                    \"right floated content\">\r\n                    <button className=\"ui button primary\">\r\n                        Edit\r\n                    </button>\r\n                    <button className=\"ui button negative\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        {stream.title}\r\n                        <div className=\"description\"> {stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderCreate()\r\n    {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">\r\n                    {this.renderList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}