{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mike\\\\Documents\\\\GitHub\\\\Streams02_7.3\\\\Streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.editStream(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\Mike\\Documents\\GitHub\\Streams02_7.3\\Streams\\client\\src\\components\\streams\\StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","match","params","id","stream","pick","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,U;;;;;;;;;;;;;;;;;;UAKFC,Q,GAAW,UAAAC,UAAU,EAAI;AACrB,YAAKC,KAAL,CAAWL,UAAX,CAAsB,MAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACH,K;;;;;;;wCANmB;AAChB,WAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAMQ;AACL,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,aAAa,EAAEb,CAAC,CAACc,IAAF,CAAO,KAAKL,KAAL,CAAWI,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADnB;AAEI,QAAA,QAAQ,EAAE,KAAKN,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;;EAtBoBN,KAAK,CAACc,S;;AAyB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAClBc,eADkB,EAElB;AACIb,EAAAA,WAAW,EAAXA,WADJ;AAEIC,EAAAA,UAAU,EAAVA;AAFJ,CAFkB,CAAP,CAMbE,UANa,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm\r\n                    initialValues={_.pick(this.props.stream, 'title', 'description')}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        fetchStream,\r\n        editStream\r\n    }\r\n)(StreamEdit);"]},"metadata":{},"sourceType":"module"}